[{"/Users/seandan/Desktop/blackjack-frontend/frontend/src/index.js":"1","/Users/seandan/Desktop/blackjack-frontend/frontend/src/routes/index.js":"2","/Users/seandan/Desktop/blackjack-frontend/frontend/src/routes/ProfilePage.js":"3","/Users/seandan/Desktop/blackjack-frontend/frontend/src/routes/RegisterPage.js":"4","/Users/seandan/Desktop/blackjack-frontend/frontend/src/routes/GamePage.js":"5","/Users/seandan/Desktop/blackjack-frontend/frontend/src/components/Card/PlayingCard.js":"6","/Users/seandan/Desktop/blackjack-frontend/frontend/src/util/user.js":"7","/Users/seandan/Desktop/blackjack-frontend/frontend/src/util/card.js":"8","/Users/seandan/Desktop/blackjack-frontend/frontend/src/routes/LoginPage.js":"9","/Users/seandan/Desktop/blackjack-frontend/frontend/src/routes/HomePage.js":"10","/Users/seandan/Desktop/blackjack-frontend/frontend/src/components/Login.js":"11","/Users/seandan/Desktop/blackjack-frontend/frontend/src/components/Wrapper.js":"12","/Users/seandan/Desktop/blackjack-frontend/frontend/src/components/Register.js":"13","/Users/seandan/Desktop/blackjack-frontend/frontend/src/components/Header.js":"14","/Users/seandan/Desktop/blackjack-frontend/frontend/src/components/MyInfo.js":"15","/Users/seandan/Desktop/blackjack-frontend/frontend/src/components/Game.js":"16","/Users/seandan/Desktop/blackjack-frontend/frontend/src/components/Chips/Chips.js":"17","/Users/seandan/Desktop/blackjack-frontend/frontend/src/util/game.js":"18","/Users/seandan/Desktop/blackjack-frontend/frontend/src/GameStatusModal.js":"19","/Users/seandan/Desktop/blackjack-frontend/frontend/src/components/GameButtons.js":"20","/Users/seandan/Desktop/blackjack-frontend/frontend/src/components/Leaderboard/Leaderboard.js":"21","/Users/seandan/Desktop/blackjack-frontend/frontend/src/components/Leaderboard/components/EntryList.js":"22","/Users/seandan/Desktop/blackjack-frontend/frontend/src/components/Footer.js":"23"},{"size":304,"mtime":1611272957351,"results":"24","hashOfConfig":"25"},{"size":876,"mtime":1611321908132,"results":"26","hashOfConfig":"25"},{"size":212,"mtime":1611323420399,"results":"27","hashOfConfig":"25"},{"size":295,"mtime":1611322852554,"results":"28","hashOfConfig":"25"},{"size":276,"mtime":1611337069757,"results":"29","hashOfConfig":"25"},{"size":1720,"mtime":1611284883707,"results":"30","hashOfConfig":"25"},{"size":834,"mtime":1611416541956,"results":"31","hashOfConfig":"25"},{"size":1337,"mtime":1611378921682,"results":"32","hashOfConfig":"25"},{"size":279,"mtime":1611322866515,"results":"33","hashOfConfig":"25"},{"size":1761,"mtime":1611426398747,"results":"34","hashOfConfig":"25"},{"size":2846,"mtime":1611323989116,"results":"35","hashOfConfig":"25"},{"size":340,"mtime":1611322013224,"results":"36","hashOfConfig":"25"},{"size":2798,"mtime":1611321844986,"results":"37","hashOfConfig":"25"},{"size":2121,"mtime":1611425018076,"results":"38","hashOfConfig":"25"},{"size":1435,"mtime":1611426311436,"results":"39","hashOfConfig":"25"},{"size":8639,"mtime":1611385684968,"results":"40","hashOfConfig":"25"},{"size":974,"mtime":1611345709271,"results":"41","hashOfConfig":"25"},{"size":2739,"mtime":1611384081765,"results":"42","hashOfConfig":"25"},{"size":1463,"mtime":1611379764324,"results":"43","hashOfConfig":"25"},{"size":1559,"mtime":1611384094106,"results":"44","hashOfConfig":"25"},{"size":1274,"mtime":1611425688948,"results":"45","hashOfConfig":"25"},{"size":560,"mtime":1611422965496,"results":"46","hashOfConfig":"25"},{"size":885,"mtime":1611425773651,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1szfpf1",{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/seandan/Desktop/blackjack-frontend/frontend/src/index.js",[],["104","105"],"/Users/seandan/Desktop/blackjack-frontend/frontend/src/routes/index.js",["106","107","108"],"import React from 'react';\nimport {\n  Router,\n  BrowserRouter,\n  Route,\n  Switch,\n  Redirect,\n  browserHistory,\n} from 'react-router-dom';\nimport LoginPage from './LoginPage';\nimport RegisterPage from './RegisterPage';\nimport GamePage from './GamePage';\nimport ProfilePage from './ProfilePage';\nimport HomePage from './HomePage';\nimport { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nconst Routes = () => {\n  return (\n    <BrowserRouter history={history}>\n      <Switch>\n        <Route path=\"/\" exact component={LoginPage} />\n        <Route path=\"/home\" exact component={HomePage} />\n        <Route path=\"/register\" exact component={RegisterPage} />\n        <Route path=\"/game\" exact component={GamePage} />\n        <Route path=\"/profile\" exact component={ProfilePage} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\nexport default Routes;\n","/Users/seandan/Desktop/blackjack-frontend/frontend/src/routes/ProfilePage.js",[],"/Users/seandan/Desktop/blackjack-frontend/frontend/src/routes/RegisterPage.js",["109"],"import React from 'react';\n\nimport Header from '../components/Header.js';\nimport Register from '../components/Register.js';\nimport Wrapper from '../components/Wrapper.js';\n\nfunction RegisterPage() {\n  return (\n    <Wrapper>\n      <Register />\n    </Wrapper>\n  );\n}\n\nexport default RegisterPage;\n","/Users/seandan/Desktop/blackjack-frontend/frontend/src/routes/GamePage.js",[],"/Users/seandan/Desktop/blackjack-frontend/frontend/src/components/Card/PlayingCard.js",["110"],"import React from 'react';\nimport './PlayingCard.scss';\n\nclass PlayingCard extends React.Component {\n  constructor(props) {\n    super(props);\n    if (!this.props.value) {\n      throw new Error('Value must be defined for playing cards');\n    }\n    if (!this.props.suit) {\n      throw new Error('Suit must be defined for playing cards');\n    }\n  }\n\n  render() {\n    let val = 2;\n    switch (this.props.value) {\n      case 1:\n        val = 'A';\n        break;\n      case 11:\n        val = 'J';\n        break;\n      case 12:\n        val = 'Q';\n        break;\n      case 13:\n        val = 'K';\n        break;\n      default:\n        val = this.props.value;\n        break;\n    }\n\n    const suit =\n      this.props.suit === 'spades' ? (\n        <React.Fragment>&spades;</React.Fragment>\n      ) : this.props.suit === 'diamonds' ? (\n        <React.Fragment>&diams;</React.Fragment>\n      ) : this.props.suit === 'hearts' ? (\n        <React.Fragment>&hearts;</React.Fragment>\n      ) : this.props.suit === 'clubs' ? (\n        <React.Fragment>&clubs;</React.Fragment>\n      ) : (\n        <React.Fragment>\"N/A\"</React.Fragment>\n      );\n\n    return (\n      <div className={'playingCard' + ' ' + this.props.suit}>\n        <div className=\"valueUpperLeft\">{val}</div>\n        <div className=\"valueUpperRight\">{val}</div>\n        <div className=\"valueLowerRight\">{val}</div>\n        <div className=\"valueLowerLeft\">{val}</div>\n        <div className=\"suitUpperLeft\">{suit}</div>\n        <div className=\"suitUpperRight\">{suit}</div>\n        <div className=\"suitLowerRight\">{suit}</div>\n        <div className=\"suitLowerLeft\">{suit}</div>\n      </div>\n    );\n  }\n}\n\nexport default PlayingCard;\n","/Users/seandan/Desktop/blackjack-frontend/frontend/src/util/user.js",[],"/Users/seandan/Desktop/blackjack-frontend/frontend/src/util/card.js",[],"/Users/seandan/Desktop/blackjack-frontend/frontend/src/routes/LoginPage.js",["111"],"import React from 'react';\nimport Login from '../components/Login.js';\nimport Header from '../components/Header.js';\nimport Wrapper from '../components/Wrapper.js';\n\nfunction LoginPage() {\n  return (\n    <Wrapper>\n      <Login />\n    </Wrapper>\n  );\n}\n\nexport default LoginPage;\n","/Users/seandan/Desktop/blackjack-frontend/frontend/src/routes/HomePage.js",["112"],"/Users/seandan/Desktop/blackjack-frontend/frontend/src/components/Login.js",["113","114","115","116","117","118","119","120","121"],"import React from 'react';\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\nimport axios from 'axios';\n// import history from '../history';\nimport { withRouter } from 'react-router-dom';\nimport {\n  Box,\n  Button,\n  FormControl,\n  Link,\n  FormHelperText,\n  FormLabel,\n  Heading,\n  Input,\n  Text,\n  Stack,\n  Checkbox,\n  Flex,\n  useColorMode,\n  IconButton,\n} from '@chakra-ui/react';\nimport Wrapper from './Wrapper';\n\nconst VARIANT_COLOR = 'teal';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    //push to server\n    console.log({\n      email: this.state.email,\n      password: this.state.password,\n    });\n    const response = await axios.post(\n      `http://localhost:8081/login?email=${this.state.email}&password=${this.state.password}`,\n      {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      },\n    );\n    console.log({ token: response.data.token });\n    localStorage.setItem('token', response.data.token);\n    this.props.history.push('/home');\n    //reset state\n    this.setState({\n      email: '',\n      password: '',\n    });\n  }\n\n  render() {\n    return (\n      <Box\n        borderWidth={1}\n        px={4}\n        width=\"full\"\n        maxWidth=\"500px\"\n        borderRadius={10}\n        textAlign=\"center\"\n        boxShadow=\"lg\"\n        bg=\"white\"\n      >\n        <Box p={4}>\n          <Box textAlign=\"center\">\n            <Heading>Login</Heading>\n          </Box>\n          <Box my={8} textAlign=\"left\">\n            <form onSubmit={this.handleSubmit}>\n              <FormControl id=\"email\">\n                <FormLabel>Email address</FormLabel>\n                <Input\n                  type=\"email\"\n                  onChange={(event) =>\n                    this.setState({ email: event.target.value })\n                  }\n                />\n              </FormControl>\n              <FormControl id=\"password\">\n                <FormLabel>Password</FormLabel>\n                <Input\n                  type=\"password\"\n                  onChange={(event) =>\n                    this.setState({ password: event.target.value })\n                  }\n                />\n              </FormControl>\n              <Box mt=\"20px\">\n                <Button type=\"submit\">Submit</Button>\n              </Box>\n              <Stack isInline justifyContent=\"space-between\" mt={4}>\n                <Box>\n                  <Link as={RouterLink} to=\"/register\">\n                    Don't have an acccount?\n                  </Link>\n                </Box>\n              </Stack>\n            </form>\n          </Box>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default withRouter(Login);\n","/Users/seandan/Desktop/blackjack-frontend/frontend/src/components/Wrapper.js",["122"],"import { Flex } from '@chakra-ui/react';\nimport { Box } from '@material-ui/core';\n\nexport default function Wrapper(props) {\n  return (\n    <Flex\n      minHeight=\"100vh\"\n      width=\"full\"\n      align=\"center\"\n      justifyContent=\"center\"\n      bgGradient=\"linear(to-t, green.200, pink.500)\"\n    >\n      {props.children}\n    </Flex>\n  );\n}\n","/Users/seandan/Desktop/blackjack-frontend/frontend/src/components/Register.js",["123","124","125","126","127","128","129"],"import React from 'react';\nimport axios from 'axios';\nimport { withRouter, Link as RouterLink } from 'react-router-dom';\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormHelperText,\n  FormLabel,\n  Heading,\n  Input,\n  Text,\n  Stack,\n  Checkbox,\n  Flex,\n  useColorMode,\n  IconButton,\n  Link,\n} from '@chakra-ui/react';\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      username: '',\n      password: '',\n      cash: 100,\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  async handleClick(event) {\n    event.preventDefault();\n    const response = await axios.post(\n      `http://localhost:8081/register?username=${this.state.username}&email=${this.state.email}&password=${this.state.password}&cash=${this.state.cash}`,\n    );\n\n    this.setState({\n      email: '',\n      username: '',\n      password: '',\n    });\n\n    this.props.history.push('/');\n  }\n\n  render() {\n    return (\n      <Box\n        borderWidth={1}\n        px={4}\n        width=\"full\"\n        maxWidth=\"500px\"\n        borderRadius={10}\n        textAlign=\"center\"\n        boxShadow=\"lg\"\n        bg=\"white\"\n      >\n        <Box p={4}>\n          <Box textAlign=\"center\">\n            <Heading>Register</Heading>\n          </Box>\n          <Box my={8} textAlign=\"left\">\n            <form onSubmit={this.handleSubmit}>\n              <FormControl id=\"email\">\n                <FormLabel>Email address</FormLabel>\n                <Input\n                  type=\"email\"\n                  onChange={(event) =>\n                    this.setState({ email: event.target.value })\n                  }\n                />\n              </FormControl>\n              <FormControl id=\"username\">\n                <FormLabel>Username</FormLabel>\n                <Input\n                  type=\"email\"\n                  onChange={(event) =>\n                    this.setState({ username: event.target.value })\n                  }\n                />\n              </FormControl>\n              <FormControl id=\"password\">\n                <FormLabel>Password</FormLabel>\n                <Input\n                  type=\"password\"\n                  onChange={(event) =>\n                    this.setState({ password: event.target.value })\n                  }\n                />\n              </FormControl>\n              <Box mt=\"20px\">\n                <Button type=\"submit\">Submit</Button>\n              </Box>\n              <Stack isInline justifyContent=\"space-between\" mt={4}>\n                <Box>\n                  <Link as={RouterLink} to=\"/\">\n                    Don't have an acccount?\n                  </Link>\n                </Box>\n              </Stack>\n            </form>\n          </Box>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default withRouter(Register);\n","/Users/seandan/Desktop/blackjack-frontend/frontend/src/components/Header.js",["130","131"],"/Users/seandan/Desktop/blackjack-frontend/frontend/src/components/MyInfo.js",["132","133"],"/Users/seandan/Desktop/blackjack-frontend/frontend/src/components/Game.js",["134","135","136","137","138","139","140","141","142"],"import {\n  Box,\n  Grid,\n  GridItem,\n  Button,\n  Text,\n  HStack,\n  Center,\n  Image,\n  Spacer,\n  VStack,\n  Heading,\n  Wrap,\n} from '@chakra-ui/react';\nimport React from 'react';\nimport axios from 'axios';\nimport { getMe, getDealer } from '../util/user.js';\nimport { formatCard, formatDealerCard } from '../util/card.js';\nimport Chips from './Chips/Chips.js';\nimport {\n  displayBetButton,\n  displayNewGameButton,\n  displayDealButton,\n  displayHitButton,\n  displayDoubleButton,\n  displayStandButton,\n  hasBet,\n  isGameOver,\n} from '../util/game.js';\nimport GameStatusModal from '../GameStatusModal.js';\nimport GameButtons from './GameButtons.js';\n\nconst initState = {\n  dealer: null,\n  player: null,\n  gameId: '',\n  dealerHand: null,\n  playerHand: null,\n  message: 'Start a New Game!',\n  bet: 0,\n  actions: [],\n  payout: 0,\n  status: null,\n  busted: false,\n};\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...initState,\n    };\n    this.newGame = this.newGame.bind(this);\n    this.stand = this.stand.bind(this);\n    this.handleBet = this.handleBet.bind(this);\n    this.submitBet = this.submitBet.bind(this);\n    this.dealCards = this.dealCards.bind(this);\n    this.hit = this.hit.bind(this);\n    this.doubleDown = this.doubleDown.bind(this);\n    this.stand = this.stand.bind(this);\n    this.onClose = this.onClose.bind(this);\n  }\n\n  async componentDidMount() {\n    const me = await getMe();\n    const dealer = await getDealer();\n    this.setState({ dealer: dealer });\n    this.setState({ player: me });\n  }\n\n  async resetState() {\n    await this.setState({\n      ...initState,\n    });\n    await this.setPlayerAndDealer();\n  }\n\n  async setPlayerAndDealer() {\n    const me = await getMe();\n    const dealer = await getDealer();\n    this.setState({ dealer: dealer });\n    this.setState({ player: me });\n  }\n\n  updateActions(action) {\n    this.setState({ actions: this.state.actions.concat(action) });\n  }\n  async handleBet(amount) {\n    if (hasBet(this.state.actions)) {\n      return;\n    }\n    this.setState({ bet: this.state.bet + amount });\n  }\n\n  async newGame(event) {\n    //reset state\n    this.resetState();\n    //create a new game\n    const { data } = await axios.post(\n      'http://localhost:8081/games',\n      {},\n      {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n      },\n    );\n    this.setState({ gameId: data });\n    this.updateActions('new game');\n  }\n  async submitBet() {\n    await axios.patch(\n      `http://localhost:8081/games/bet?game=${this.state.gameId}&player=${this.state.player.id}&bet=${this.state.bet}`,\n    );\n    this.updateActions('bet');\n  }\n  async doubleDown() {\n    const { data } = await axios.patch(\n      `http://localhost:8081/games/double?game=${\n        this.state.gameId\n      }&player=${this.state.player.id}&bet=${this.state.bet * 2}`,\n    );\n    this.handleBet(this.state.bet);\n    this.setState({ playerHand: data });\n    this.updateActions('double');\n    if (isGameOver(data.points)) {\n      this.handleGameOver(data.points);\n    }\n  }\n  async handleGameOver(points) {\n    if (points > 21) {\n      const { data: _data } = await axios.patch(\n        `http://localhost:8081/games/settle?game=${this.state.gameId}&player=${this.state.player.id}`,\n      );\n      this.setState({\n        status: _data.status,\n        payout: _data.payout,\n        busted: true,\n      });\n      // this.setState({ status: 'lose', busted: true });\n    } else {\n      this.stand();\n    }\n  }\n  async dealCards() {\n    //deal cards\n    this.deal(this.state.player.id);\n    //deal the players hand\n    this.deal(-1);\n    //deal the dealers hand\n    this.updateActions('deal');\n  }\n\n  onClose() {\n    this.setState({ status: null });\n  }\n\n  async deal(player) {\n    const { data } = await axios.patch(\n      `http://localhost:8081/games/deal?game=${this.state.gameId}&player=${player}`,\n    );\n    if (player == -1) {\n      this.setState({ dealerHand: data });\n    } else {\n      this.setState({ playerHand: data });\n      if (isGameOver(data.points)) {\n        this.handleGameOver(data.points);\n      }\n    }\n  }\n\n  async hit() {\n    const { data } = await axios.patch(\n      `http://localhost:8081/games/hit?game=${this.state.gameId}&player=${this.state.player.id}`,\n    );\n    this.setState({ playerHand: data });\n    this.updateActions('hit');\n    if (isGameOver(data.points)) {\n      this.handleGameOver(data.points);\n    }\n  }\n\n  async stand() {\n    this.setState({ status: 'stand' });\n    const { data } = await axios.patch(\n      `http://localhost:8081/games/stand?game=${this.state.gameId}&player=${this.state.player.id}`,\n    );\n    const { data: _data } = await axios.patch(\n      `http://localhost:8081/games/settle?game=${this.state.gameId}&player=${this.state.player.id}`,\n    );\n    // console.log(settle);\n    console.log(_data);\n    this.setState({\n      dealerHand: data,\n      status: _data.status,\n      payout: _data.payout,\n    });\n    this.updateActions('stand');\n  }\n\n  render() {\n    return (\n      <Grid\n        h=\"100vh\"\n        templateRows=\"repeat(12, 1fr)\"\n        templateColumns=\"repeat(12, 1fr)\"\n      >\n        <GridItem\n          rowStart={1}\n          rowEnd={6}\n          colStart={1}\n          colEnd={13}\n          bg=\"#35654d\"\n          borderBottom=\"solid\"\n          borderColor=\"tomato\"\n        >\n          <GameStatusModal\n            payout={this.state.payout}\n            status={this.state.status}\n            newGame={this.newGame}\n            isOpen={this.state.status ? true : false}\n            onClose={this.onClose}\n          />\n          <Image\n            borderRadius=\"full\"\n            border=\"solid\"\n            borderColor=\"gray.200\"\n            boxSize=\"150px\"\n            src={this.state.dealer?.image}\n            alt=\"Dealer\"\n          />\n          <Text>Dealer: {this.state.dealer?.username}</Text>\n          {this.state.status ? (\n            <Box position=\"absolute\" left=\"0\">\n              <Heading zIndex={1}>\n                Points:{' '}\n                {this.state.dealerHand\n                  ? this.state.dealerHand.points > 21\n                    ? 'Busted'\n                    : this.state.dealerHand.points\n                  : 0}\n              </Heading>\n            </Box>\n          ) : null}\n          <Box>\n            <Center>\n              <HStack>\n                {this.state.dealerHand &&\n                  this.state.dealerHand.cards.map((card, index) => {\n                    return formatDealerCard(\n                      card,\n                      index,\n                      this.state.actions,\n                    );\n                  })}\n              </HStack>\n            </Center>\n          </Box>\n        </GridItem>\n        <GridItem\n          rowStart={6}\n          rowEnd={13}\n          colStart={1}\n          colEnd={13}\n          bg=\"#35654d\"\n        >\n          <Box d=\"flex\" justifyContent=\"center\">\n            <Box position=\"absolute\" left=\"0\">\n              <VStack>\n                <Heading>Bet: ${this.state.bet}</Heading>\n                <Heading zIndex={1}>\n                  Points:{' '}\n                  {this.state.playerHand\n                    ? this.state.playerHand.points > 21\n                      ? 'Busted'\n                      : this.state.playerHand.points\n                    : 0}\n                </Heading>\n              </VStack>\n            </Box>\n            <GameButtons\n              actions={this.state.actions}\n              busted={this.state.busted}\n              newGame={this.newGame}\n              stand={this.stand}\n              hit={this.hit}\n              submitBet={this.submitBet}\n              dealCards={this.dealCards}\n              doubleDown={this.doubleDown}\n            />\n          </Box>\n          <Box d=\"flex\" justifyContent=\"flex-end\">\n            <Box pr=\"200px\">\n              <Wrap>\n                {this.state.playerHand &&\n                  this.state.playerHand.cards.map((card) => {\n                    return formatCard(card);\n                  })}\n              </Wrap>\n            </Box>\n            <VStack>\n              <Image\n                borderRadius=\"full\"\n                boxSize=\"150px\"\n                border=\"solid\"\n                borderColor=\"gray.200\"\n                src={this.state.player?.image}\n                alt={this.state.player?.username}\n              />\n              <Text>Player: {this.state.player?.username}</Text>\n            </VStack>\n          </Box>\n          <Box pt=\"50px\">\n            <Chips handleBet={this.handleBet} />\n          </Box>\n        </GridItem>\n      </Grid>\n    );\n  }\n}\n\nexport default Game;\n","/Users/seandan/Desktop/blackjack-frontend/frontend/src/components/Chips/Chips.js",[],"/Users/seandan/Desktop/blackjack-frontend/frontend/src/util/game.js",[],"/Users/seandan/Desktop/blackjack-frontend/frontend/src/GameStatusModal.js",["143","144","145"],"import {\n  Button,\n  Center,\n  Heading,\n  useDisclosure,\n} from '@chakra-ui/react';\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Box,\n  Text,\n} from '@chakra-ui/react';\n\nfunction GameStatusModal({\n  isOpen,\n  onClose,\n  payout,\n  status,\n  newGame,\n}) {\n  const displayMessage = () => {\n    if (status === 'win') {\n      return (\n        <Box>\n          <Heading>YOU WIN</Heading>\n          <Center pt=\"50px\">\n            <Text fontSize=\"4xl\">You Win: $ {payout}</Text>\n          </Center>\n        </Box>\n      );\n    } else if (status === 'draw') {\n      return (\n        <Box>\n          <Heading>PUSH</Heading>\n          <Center pt=\"50px\">\n            <Text fontSize=\"4xl\">You Win: $ {payout}</Text>\n          </Center>\n        </Box>\n      );\n    } else {\n      return (\n        <Box>\n          <Heading>YOU LOSE</Heading>\n          <Center pt=\"50px\">\n            <Text fontSize=\"4xl\">You Lost: $ {payout}</Text>\n          </Center>\n        </Box>\n      );\n    }\n  };\n  return (\n    <>\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalBody>{displayMessage()}</ModalBody>\n          <ModalFooter pt=\"50px\">\n            <Button colorScheme=\"blue\" mr={3} onClick={newGame}>\n              New Game\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n}\n\nexport default GameStatusModal;\n","/Users/seandan/Desktop/blackjack-frontend/frontend/src/components/GameButtons.js",[],"/Users/seandan/Desktop/blackjack-frontend/frontend/src/components/Leaderboard/Leaderboard.js",[],"/Users/seandan/Desktop/blackjack-frontend/frontend/src/components/Leaderboard/components/EntryList.js",[],"/Users/seandan/Desktop/blackjack-frontend/frontend/src/components/Footer.js",[],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":3,"column":3,"nodeType":"152","messageId":"153","endLine":3,"endColumn":9},{"ruleId":"150","severity":1,"message":"154","line":7,"column":3,"nodeType":"152","messageId":"153","endLine":7,"endColumn":11},{"ruleId":"150","severity":1,"message":"155","line":8,"column":3,"nodeType":"152","messageId":"153","endLine":8,"endColumn":17},{"ruleId":"150","severity":1,"message":"156","line":3,"column":8,"nodeType":"152","messageId":"153","endLine":3,"endColumn":14},{"ruleId":"157","severity":1,"message":"158","line":49,"column":37,"nodeType":"159","messageId":"160","endLine":49,"endColumn":38},{"ruleId":"150","severity":1,"message":"156","line":3,"column":8,"nodeType":"152","messageId":"153","endLine":3,"endColumn":14},{"ruleId":"150","severity":1,"message":"161","line":5,"column":3,"nodeType":"152","messageId":"153","endLine":5,"endColumn":9},{"ruleId":"150","severity":1,"message":"162","line":2,"column":30,"nodeType":"152","messageId":"153","endLine":2,"endColumn":40},{"ruleId":"150","severity":1,"message":"163","line":11,"column":3,"nodeType":"152","messageId":"153","endLine":11,"endColumn":17},{"ruleId":"150","severity":1,"message":"164","line":15,"column":3,"nodeType":"152","messageId":"153","endLine":15,"endColumn":7},{"ruleId":"150","severity":1,"message":"165","line":17,"column":3,"nodeType":"152","messageId":"153","endLine":17,"endColumn":11},{"ruleId":"150","severity":1,"message":"166","line":18,"column":3,"nodeType":"152","messageId":"153","endLine":18,"endColumn":7},{"ruleId":"150","severity":1,"message":"167","line":19,"column":3,"nodeType":"152","messageId":"153","endLine":19,"endColumn":15},{"ruleId":"150","severity":1,"message":"168","line":20,"column":3,"nodeType":"152","messageId":"153","endLine":20,"endColumn":13},{"ruleId":"150","severity":1,"message":"169","line":22,"column":8,"nodeType":"152","messageId":"153","endLine":22,"endColumn":15},{"ruleId":"150","severity":1,"message":"170","line":24,"column":7,"nodeType":"152","messageId":"153","endLine":24,"endColumn":20},{"ruleId":"150","severity":1,"message":"171","line":2,"column":10,"nodeType":"152","messageId":"153","endLine":2,"endColumn":13},{"ruleId":"150","severity":1,"message":"163","line":8,"column":3,"nodeType":"152","messageId":"153","endLine":8,"endColumn":17},{"ruleId":"150","severity":1,"message":"164","line":12,"column":3,"nodeType":"152","messageId":"153","endLine":12,"endColumn":7},{"ruleId":"150","severity":1,"message":"165","line":14,"column":3,"nodeType":"152","messageId":"153","endLine":14,"endColumn":11},{"ruleId":"150","severity":1,"message":"166","line":15,"column":3,"nodeType":"152","messageId":"153","endLine":15,"endColumn":7},{"ruleId":"150","severity":1,"message":"167","line":16,"column":3,"nodeType":"152","messageId":"153","endLine":16,"endColumn":15},{"ruleId":"150","severity":1,"message":"168","line":17,"column":3,"nodeType":"152","messageId":"153","endLine":17,"endColumn":13},{"ruleId":"150","severity":1,"message":"172","line":35,"column":11,"nodeType":"152","messageId":"153","endLine":35,"endColumn":19},{"ruleId":"150","severity":1,"message":"173","line":8,"column":3,"nodeType":"152","messageId":"153","endLine":8,"endColumn":8},{"ruleId":"150","severity":1,"message":"161","line":10,"column":3,"nodeType":"152","messageId":"153","endLine":10,"endColumn":9},{"ruleId":"150","severity":1,"message":"174","line":1,"column":23,"nodeType":"152","messageId":"153","endLine":1,"endColumn":30},{"ruleId":"175","severity":1,"message":"176","line":25,"column":22,"nodeType":"177","messageId":"178","endLine":25,"endColumn":24},{"ruleId":"150","severity":1,"message":"179","line":5,"column":3,"nodeType":"152","messageId":"153","endLine":5,"endColumn":9},{"ruleId":"150","severity":1,"message":"180","line":10,"column":3,"nodeType":"152","messageId":"153","endLine":10,"endColumn":9},{"ruleId":"150","severity":1,"message":"181","line":21,"column":3,"nodeType":"152","messageId":"153","endLine":21,"endColumn":19},{"ruleId":"150","severity":1,"message":"182","line":22,"column":3,"nodeType":"152","messageId":"153","endLine":22,"endColumn":23},{"ruleId":"150","severity":1,"message":"183","line":23,"column":3,"nodeType":"152","messageId":"153","endLine":23,"endColumn":20},{"ruleId":"150","severity":1,"message":"184","line":24,"column":3,"nodeType":"152","messageId":"153","endLine":24,"endColumn":19},{"ruleId":"150","severity":1,"message":"185","line":25,"column":3,"nodeType":"152","messageId":"153","endLine":25,"endColumn":22},{"ruleId":"150","severity":1,"message":"186","line":26,"column":3,"nodeType":"152","messageId":"153","endLine":26,"endColumn":21},{"ruleId":"187","severity":1,"message":"188","line":162,"column":16,"nodeType":"159","messageId":"189","endLine":162,"endColumn":18},{"ruleId":"150","severity":1,"message":"190","line":5,"column":3,"nodeType":"152","messageId":"153","endLine":5,"endColumn":16},{"ruleId":"150","severity":1,"message":"191","line":11,"column":3,"nodeType":"152","messageId":"153","endLine":11,"endColumn":14},{"ruleId":"150","severity":1,"message":"192","line":14,"column":3,"nodeType":"152","messageId":"153","endLine":14,"endColumn":19},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'browserHistory' is defined but never used.","'Header' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'Center' is defined but never used.","'useHistory' is defined but never used.","'FormHelperText' is defined but never used.","'Text' is defined but never used.","'Checkbox' is defined but never used.","'Flex' is defined but never used.","'useColorMode' is defined but never used.","'IconButton' is defined but never used.","'Wrapper' is defined but never used.","'VARIANT_COLOR' is assigned a value but never used.","'Box' is defined but never used.","'response' is assigned a value but never used.","'Stack' is defined but never used.","'Heading' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Button' is defined but never used.","'Spacer' is defined but never used.","'displayBetButton' is defined but never used.","'displayNewGameButton' is defined but never used.","'displayDealButton' is defined but never used.","'displayHitButton' is defined but never used.","'displayDoubleButton' is defined but never used.","'displayStandButton' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","'useDisclosure' is defined but never used.","'ModalHeader' is defined but never used.","'ModalCloseButton' is defined but never used.","no-global-assign","no-unsafe-negation"]